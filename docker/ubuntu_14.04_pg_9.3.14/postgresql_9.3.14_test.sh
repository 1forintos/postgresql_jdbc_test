#!/bin/bash
#
# @author Márton Kamrás
#
# The purpose of this script is to reproduce "FATAL:  the database system is starting up"
# log message generated by PostgreSQL 9.3.14 using a Docker container with 1 CPU core, ~ 600MHz.

# install Docker containerization platform
#echo "Running Docker intaller script..."
#chmod +x install_docker.sh
#./install_docker.sh

# stop all previously started containers in case they exists
docker stop $(docker ps -a -q)

dockerImageName="ubuntu_14.04/pg_9.3.14:latest"
dockerContainerName="postgres_9.3.14"

# remove generated content of previous runs
docker rm $dockerContainerName
docker rmi $dockerImageName
rm -rf pg_log

# build docker image
echo "Building docker image..."
docker build . -f Dockerfile -t $dockerImageName

# determining CPU quota to achieve ~600MHz clock speed
maxClockSpeed=$(lscpu | grep 'CPU max MHz' | awk '{ print $4; }')
let cpuQuota=60000000/$maxClockSpeed

echo "CPU max clock speed: $maxClockSpeed"
echo "CPU quota for docker container: $cpuQuota"

# create and start container
CID=$(docker run -it --name $dockerContainerName --cpuset-cpus="0" --cpu-quota=$cpuQuota -d $dockerImageName)
echo "Container ID: $CID"
CIP=$(docker inspect $CID | grep \"IPAddress\" | head -1 | cut -d '"' -f 4)
echo "Container IP: $CIP"
docker exec $dockerContainerName service postgresql restart

sleep 10
echo "Generating dummy data for database..."
./generator_script.py -d $CIP -u postgres -p postgres -t 5 -c 10 -r 200 -m --phase 1
./generator_script.py -d $CIP -u postgres -p postgres -t 5 -c 10 -r 200 -m --phase 2

echo "Running PostgreSQL error generating script..."
chmod +x test_db.sh
./test_db.sh $CIP & PID=$!

sleep 20
kill $PID
sleep 5

echo "Copying PostgreSQL logs into ./pg_log..."
docker cp $dockerContainerName:/pg_log .
chmod 755 -R pg_log
