Example usage of data postgresql data table script:
    ./generator_script.py -d 172.17.0.2 -u postgres -p postgres -t 5 -c 10 -r 180000 -m

Example usage of table verification script:
    ./verify_tables.py -d 172.17.0.2 -u postgres -t 5 -m

Docker container resource usage monitoring:
    sudo docker stats <container name/id>

Get PostgreSQL image and start container (<=9.5 supported by pgadmin3):
sudo docker run -it --name postgres_test -d ubuntu/postgres:latest

Tag docker image
sudo docker tag ba639ad5f752 phusion/postgres:latest

Docker start
sudo docker start postgres_test

Enter container bash:
sudo docker exec -ti 99ca6832ef82 /bin/bash

JDBCClient execution example:
    java -cp "target/postgres.dbclient-0.0.1-SNAPSHOT.jar:/usr/share/java/postgresql-jdbc4-9.2.jar:/home/mkamras/.m2/repository/org/apache/commons/commons-csv/1.4/commons-csv-1.4.jar" postgres.dbclient.DBClient /home/mkamras/psgre_test/phusion/gen/csv/

JDBC libpostgresql-jdbc-java

Connect to psql interface remotely:
psql -h 172.17.0.2 -p 5432 -U postgres -W -d postgres


Installed on host machine
    sudo apt-get install postgresql-server-dev-all
    python package: psycopg2

PostgreSQL db size:
    - http://blog.endpoint.com/2014/09/pgxlog-disk-space-problem-on-postgres.html
    - stored data size in /var/lib/postgresql/9.3/main/base folder
    - rapidly increasing xlogs stored in /var/lib/postgresql/9.3/main/pg_xlogs/
        - monitor its size
    - http://blog.endpoint.com/2014/09/pgxlog-disk-space-problem-on-postgres.html

Internet forward to container:
    - /etc/sysctl.conf -> net.ipv4.ip_forward=1

systemd startup script how to:
    1. the script: /usr/bin/my_service.sh (make it executable (chmod +x))
    2. the unit file: /etc/systemd/system/my_service.service
    3. systemctl enable my_service.service

    # did not work in docker container

PostgreSQL logs:
    https://www.postgresql.org/docs/9.3/static/runtime-config-logging.html
    /etc/postgresql/9.3/main/postgresql.conf

SSH:
    https://github.com/phusion/baseimage-docker#login_ssh
    HOST:
        # Download the insecure private key
        curl -o insecure_key -fSL https://github.com/phusion/baseimage-docker/raw/master/image/services/sshd/keys/insecure_key
        chmod 600 insecure_key

        # Login to the container
        ssh -i insecure_key root@<IP address>

Docker CPU constraints:
    - --cpuset-cpus: the CPU units available for the computer, example: --cpuset-cpus="0-3", --cpuset-cpus="1,3"
    - --cpu-quota: the % available from the CPU units for the container, for example: --cpu-quota=20000 (=20% on linux)
    - sudo docker run -it --name postgres_test --cpuset-cpus="0" --cpu-quota=20000 -d phusion/postgres:latest

Prototípuson:
    - (2mag ->) 2x "nice -n -19 burnP6" futtatás
    - tail -F postgres_log.log | grep FATAL

TODO:
    - !!! xlog felsőkorlát van-e, esetleg beállítani, postgre-s forrás !!! .. legutóbb 129M nél leállt fixen, ha töröltem belőle, szintén itt állt meg
